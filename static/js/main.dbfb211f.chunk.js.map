{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","getUserById","userId","users","find","todosWithUsers","usersFromServer","App","useState","setTodos","setTitle","setUserId","isTitleValid","setIsTitleValid","isUserSelected","setIsUserSelected","action","method","onSubmit","event","preventDefault","trim","length","currentTodos","newTodo","Math","max","prevTodos","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"oOAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,UACAT,EACEM,EADFN,KAGF,OACE,0BACE,UAASO,EACTJ,UAAWO,IAAG,WAAY,CACxB,sBAAuBD,IAH3B,UAME,oBAAIN,UAAU,kBAAd,SAAiCK,IAChCR,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCjBlBW,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,UCZb,G,MAAA,CACb,CACEA,GAAI,EACJN,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEK,GAAI,EACJN,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEK,GAAI,EACJN,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEK,GAAI,GACJN,KAAM,qBACNa,SAAU,iBACVZ,MAAO,4BClDX,SAASa,EAAYC,EAAgBC,GAGnC,OAFkBA,EAAMC,MAAK,SAAAlB,GAAI,OAAIA,EAAKO,KAAOS,MAE7B,KAOtB,IAAMG,ECnBS,CACb,CACEZ,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXO,OAAQ,IDEmCH,KAAI,SAAAP,GAAI,kCAClDA,GADkD,IAErDN,KAAMe,EAAYT,EAAKU,OAAQI,QAGpBC,EAAgB,WAC3B,MAA0BC,mBAAiBH,GAA3C,mBAAOP,EAAP,KAAcW,EAAd,KACA,EAA0BD,mBAAiB,IAA3C,mBAAOd,EAAP,KAAcgB,EAAd,KACA,EAA4BF,mBAA0B,IAAtD,mBAAON,EAAP,KAAeS,EAAf,KACA,EAAwCH,oBAAkB,GAA1D,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAA4CL,oBAAkB,GAA9D,mBAAOM,EAAP,KAAuBC,EAAvB,KAwCA,OACE,sBAAK1B,UAAU,MAAf,UACE,+CAEA,uBACE2B,OAAO,aACPC,OAAO,OACPC,SA7Ce,SAACC,GAWpB,GAVAA,EAAMC,iBAED1B,GAAiC,IAAxBA,EAAM2B,OAAOC,QACzBT,GAAgB,GAGbX,GACHa,GAAkB,GAGfrB,GAAUQ,GAAkC,IAAxBR,EAAM2B,OAAOC,OAAtC,CAIA,IA/BkBC,EA+BZC,EAAU,CACd/B,IAhCgB8B,EAgCCzB,EA/Bd2B,KAAKC,IAAL,MAAAD,KAAI,YAAQF,EAAaxB,KAAI,SAACP,GAAD,OAAUA,EAAKC,QAAO,GAgCtDS,QAASA,EACTR,QACAC,WAAW,EACXT,KAAMe,GAAaC,EAAQI,IAG7BG,GAAU,SAAAkB,GAAS,4BAAQA,GAAR,CAAmBH,OACtCd,EAAS,IACTC,EAAU,MAiBR,UAKE,sBAAKtB,UAAU,QAAf,UACE,kCACG,UACD,uBACEuC,KAAK,OACLC,YAAY,gBACZ,UAAQ,aACRC,MAAOpC,EACPP,KAAK,YACL4C,SAvBc,SAACZ,GACzBT,EAASS,EAAMa,OAAOF,OACtBjB,GAAgB,UAwBRD,GAAgB,sBAAMvB,UAAU,QAAhB,qCAGpB,sBAAKA,UAAU,QAAf,UACE,kCACG,SACD,yBACEF,KAAK,aACL4C,SAvCa,SAACZ,GACxBR,EAAUsB,OAAOd,EAAMa,OAAOF,QAC9Bf,GAAkB,IAsCR,UAAQ,aACRe,MAAO5B,EAJT,UAME,wBACE4B,MAAM,GACNI,UAAQ,EAFV,2BAMC5B,EAAgBP,KAAI,SAACb,GAAD,OACnB,wBAEE4C,MAAO5C,EAAKO,GAFd,SAIGP,EAAKC,MAHDD,EAAKO,cAQhBqB,GACG,sBAAMzB,UAAU,QAAhB,qCAGP,wBACEuC,KAAK,SACL,UAAQ,eAFV,oBAOF,cAAC,EAAD,CAAU9B,MAAOA,QE9HvBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dbfb211f.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './Types/Todo';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './Types/User';\n\nfunction getUserById(userId: number, users: User[]): User | null {\n  const foundUser = users.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getNewTodoId(currentTodos: Todo[]) {\n  return Math.max(...currentTodos.map((todo) => todo.id)) + 1;\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId, usersFromServer),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosWithUsers);\n  const [title, setTitle] = useState<string>('');\n  const [userId, setUserId] = useState<number | string>('');\n  const [isTitleValid, setIsTitleValid] = useState<boolean>(true);\n  const [isUserSelected, setIsUserSelected] = useState<boolean>(true);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || title.trim().length === 0) {\n      setIsTitleValid(false);\n    }\n\n    if (!userId) {\n      setIsUserSelected(false);\n    }\n\n    if (!title || !userId || title.trim().length === 0) {\n      return;\n    }\n\n    const newTodo = {\n      id: getNewTodoId(todos),\n      userId: +userId,\n      title,\n      completed: false,\n      user: getUserById(+userId, usersFromServer),\n    };\n\n    setTodos((prevTodos => [...prevTodos, newTodo]));\n    setTitle('');\n    setUserId('');\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setIsUserSelected(true);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleValid(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              name=\"todoTitle\"\n              onChange={handleTitleChange}\n            />\n          </label>\n          {!isTitleValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              name=\"userSelect\"\n              onChange={handleUserChange}\n              data-cy=\"userSelect\"\n              value={userId}\n            >\n              <option\n                value=\"\"\n                disabled\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map((user: User) => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {!isUserSelected\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}